/**
 * This code was generated by
 * \ / _    _  _|   _  _
 *  | (_)\/(_)(_|\/| |(/_  v1.0.0
 *       /       /       
 */

package com.twilio.rest.preview.sync.service.syncmap;

import com.twilio.base.Fetcher;
import com.twilio.exception.ApiConnectionException;
import com.twilio.exception.ApiException;
import com.twilio.exception.RestException;
import com.twilio.http.HttpMethod;
import com.twilio.http.Request;
import com.twilio.http.Response;
import com.twilio.http.TwilioRestClient;
import com.twilio.rest.Domains;

public class SyncMapPermissionFetcher extends Fetcher<SyncMapPermission> {
    private final String serviceSid;
    private final String mapSid;
    private final String identity;

    /**
     * Construct a new SyncMapPermissionFetcher.
     * 
     * @param serviceSid The service_sid
     * @param mapSid Sync Map SID or unique name.
     * @param identity Identity of the user to whom the Sync Map Permission applies.
     */
    public SyncMapPermissionFetcher(final String serviceSid, 
                                    final String mapSid, 
                                    final String identity) {
        this.serviceSid = serviceSid;
        this.mapSid = mapSid;
        this.identity = identity;
    }

    /**
     * Make the request to the Twilio API to perform the fetch.
     * 
     * @param client TwilioRestClient with which to make the request
     * @return Fetched SyncMapPermission
     */
    @Override
    @SuppressWarnings("checkstyle:linelength")
    public SyncMapPermission fetch(final TwilioRestClient client) {
        Request request = new Request(
            HttpMethod.GET,
            Domains.PREVIEW.toString(),
            "/Sync/Services/" + this.serviceSid + "/Maps/" + this.mapSid + "/Permissions/" + this.identity + "",
            client.getRegion()
        );
        
        Response response = client.request(request);
        
        if (response == null) {
            throw new ApiConnectionException("SyncMapPermission fetch failed: Unable to connect to server");
        } else if (!TwilioRestClient.SUCCESS.apply(response.getStatusCode())) {
            RestException restException = RestException.fromJson(response.getStream(), client.getObjectMapper());
            if (restException == null) {
                throw new ApiException("Server Error, no content");
            }
        
            throw new ApiException(
                restException.getMessage(),
                restException.getCode(),
                restException.getMoreInfo(),
                restException.getStatus(),
                null
            );
        }
        
        return SyncMapPermission.fromJson(response.getStream(), client.getObjectMapper());
    }
}